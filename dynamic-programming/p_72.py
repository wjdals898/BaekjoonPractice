# 조약돌 문제

def solution(arr):
    n = len(arr[0])
    dp = [[0] * n for _ in range(4)]    # 조약돌 배치하는 리스트 초기화

    # 첫 번째 열에 대한 가중치 초기화
    # 0: 상단, 1: 중앙, 2: 하단, 3: 상단 + 하단
    dp[0][0] = arr[0][0]
    dp[1][0] = arr[1][0]
    dp[2][0] = arr[2][0]
    dp[3][0] = arr[0][0] + arr[2][0]

    # 두 번째 열부터 마지막 열까지 가중치 계산
    for i in range(1, n):
        # 패턴 0 선택한 경우의 가중치 - 이전 패턴은 중앙이나 하단 가능
        dp[0][i] = arr[0][i] + max(dp[1][i-1], dp[2][i-1])
        # 패턴 1 선택한 경우의 가중치 - 이전 패턴은 상단, 하단, 상단+하단 가능
        dp[1][i] = arr[1][i] + max(dp[0][i-1], dp[2][i-1], dp[3][i-1])
        # 패턴 2 선택한 경우의 가중치 - 이전 패턴은 상단, 중앙 가능
        dp[2][i] = arr[2][i] + max(dp[0][i-1], dp[1][i-1])
        # 패턴 3 선택한 경우의 가중치 - 이전 패턴은 중앙 가능
        dp[3][i] = arr[0][i] + arr[2][i] + dp[1][i-1]

    return max(dp[:][-1])   # dp의 마지막 열은 최대 가중치의 합을 나타냄


arr_list = [
    [[1,3,3,2], [2,1,4,1], [1,5,2,3]],
    [[1,7,13,2,6], [2,-4,2,5,4], [5,3,5,-3,1]]
]
for data in arr_list:
    print(solution(data))
